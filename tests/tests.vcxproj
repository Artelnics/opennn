<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="adaptive_moment_estimation_test.cpp" />
    <ClCompile Include="bounding_layer_test.cpp" />
    <ClCompile Include="conjugate_gradient_test.cpp" />
    <ClCompile Include="convolutional_layer_test.cpp" />
    <ClCompile Include="correlations_test.cpp" />
    <ClCompile Include="cross_entropy_error_test.cpp" />
    <ClCompile Include="data_set_test.cpp" />
    <ClCompile Include="flatten_layer_test.cpp" />
    <ClCompile Include="genetic_algorithm_test.cpp" />
    <ClCompile Include="gradient_descent_test.cpp" />
    <ClCompile Include="growing_inputs_test.cpp" />
    <ClCompile Include="growing_neurons_test.cpp" />
    <ClCompile Include="inputs_selection_test.cpp" />
    <ClCompile Include="learning_rate_algorithm_test.cpp" />
    <ClCompile Include="levenberg_marquardt_algorithm_test.cpp" />
    <ClCompile Include="long_short_term_memory_layer_test.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="mean_squared_error_test.cpp" />
    <ClCompile Include="minkowski_error_test.cpp" />
    <ClCompile Include="model_selection_test.cpp" />
    <ClCompile Include="neural_network_test.cpp" />
    <ClCompile Include="neurons_selection_test.cpp" />
    <ClCompile Include="normalized_squared_error_test.cpp" />
    <ClCompile Include="numerical_differentiation_test.cpp" />
    <ClCompile Include="perceptron_layer_test.cpp" />
    <ClCompile Include="pooling_layer_test.cpp" />
    <ClCompile Include="probabilistic_layer_test.cpp" />
    <ClCompile Include="quasi_newton_method_test.cpp" />
    <ClCompile Include="recurrent_layer_test.cpp" />
    <ClCompile Include="response_optimization_test.cpp" />
    <ClCompile Include="scaling_layer_test.cpp" />
    <ClCompile Include="scaling_test.cpp" />
    <ClCompile Include="statistics_test.cpp" />
    <ClCompile Include="stochastic_gradient_descent_test.cpp" />
    <ClCompile Include="sum_squared_error_test.cpp" />
    <ClCompile Include="tensor_utilities_test.cpp" />
    <ClCompile Include="testing_analysis_test.cpp" />
    <ClCompile Include="training_strategy_test.cpp" />
    <ClCompile Include="unscaling_layer_test.cpp" />
    <ClCompile Include="weighted_squared_error_test.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="adaptive_moment_estimation_test.h" />
    <ClInclude Include="bounding_layer_test.h" />
    <ClInclude Include="conjugate_gradient_test.h" />
    <ClInclude Include="convolutional_layer_test.h" />
    <ClInclude Include="correlations_test.h" />
    <ClInclude Include="cross_entropy_error_test.h" />
    <ClInclude Include="data_set_test.h" />
    <ClInclude Include="flatten_layer_test.h" />
    <ClInclude Include="genetic_algorithm_test.h" />
    <ClInclude Include="gradient_descent_test.h" />
    <ClInclude Include="growing_inputs_test.h" />
    <ClInclude Include="growing_neurons_test.h" />
    <ClInclude Include="inputs_selection_test.h" />
    <ClInclude Include="learning_rate_algorithm_test.h" />
    <ClInclude Include="levenberg_marquardt_algorithm_test.h" />
    <ClInclude Include="long_short_term_memory_layer_test.h" />
    <ClInclude Include="mean_squared_error_test.h" />
    <ClInclude Include="minkowski_error_test.h" />
    <ClInclude Include="model_selection_test.h" />
    <ClInclude Include="neural_network_test.h" />
    <ClInclude Include="neurons_selection_test.h" />
    <ClInclude Include="normalized_squared_error_test.h" />
    <ClInclude Include="numerical_differentiation_test.h" />
    <ClInclude Include="opennn_tests.h" />
    <ClInclude Include="perceptron_layer_test.h" />
    <ClInclude Include="pooling_layer_test.h" />
    <ClInclude Include="probabilistic_layer_test.h" />
    <ClInclude Include="quasi_newton_method_test.h" />
    <ClInclude Include="recurrent_layer_test.h" />
    <ClInclude Include="response_optimization_test.h" />
    <ClInclude Include="scaling_layer_test.h" />
    <ClInclude Include="scaling_test.h" />
    <ClInclude Include="statistics_test.h" />
    <ClInclude Include="stochastic_gradient_descent_test.h" />
    <ClInclude Include="sum_squared_error_test.h" />
    <ClInclude Include="tensor_utilities_test.h" />
    <ClInclude Include="testing_analysis_test.h" />
    <ClInclude Include="training_strategy_test.h" />
    <ClInclude Include="unscaling_layer_test.h" />
    <ClInclude Include="weighted_squared_error_test.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include="tests.vcxproj.user" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{A3656628-2646-4F45-887A-DF284ED6A11B}</ProjectGuid>
    <RootNamespace>AirfoilSelfNoise</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>Intel C++ Compiler 2022</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>Intel C++ Compiler 2022</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>Intel C++ Compiler 2022</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.40219.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\opennn-build\$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\..\opennn-build\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\opennn-build\$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\..\opennn-build\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IntDir>..\..\opennn-build\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)\bin\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IntDir>..\..\opennn-build\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)\bin\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LibraryPath>D:\opennn-build\Win32\Release;$(LibraryPath)</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LibraryPath>D:\opennn-build\Win32\Release;$(LibraryPath)</LibraryPath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <MinimalRebuild>true</MinimalRebuild>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <TargetMachine>MachineX86</TargetMachine>
      <AdditionalLibraryDirectories>$(Configuration)</AdditionalLibraryDirectories>
      <AdditionalDependencies>..\..\opennn-build\$(Platform)\$(Configuration)\opennn.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <OpenMP>GenerateParallelCode</OpenMP>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(Configuration)</AdditionalLibraryDirectories>
      <AdditionalDependencies>..\..\opennn-build\$(Platform)\$(Configuration)\opennn.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <SubSystem>Console</SubSystem>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <WarningLevel>Level4</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <TargetMachine>MachineX86</TargetMachine>
      <AdditionalDependencies>..\..\opennn-build\$(Platform)\$(Configuration)\opennn.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(Configuration)</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <WarningLevel>Level4</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <OpenMP>GenerateParallelCode</OpenMP>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <AdditionalDependencies>..\..\opennn-build\$(Platform)\$(Configuration)\opennn.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(Configuration)</AdditionalLibraryDirectories>
      <SubSystem>Console</SubSystem>
    </Link>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>