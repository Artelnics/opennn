  main.cpp
main.obj : error LNK2019: unresolved external symbol "public: virtual __cdecl opennn::DataSet::~DataSet(void)" (??1DataSet@opennn@@UEAA@XZ) referenced in function "public: virtual __cdecl opennn::ImageDataSet::~ImageDataSet(void)" (??1ImageDataSet@opennn@@UEAA@XZ)
main.obj : error LNK2019: unresolved external symbol "public: class Eigen::Tensor<__int64,1,0,__int64> __cdecl opennn::DataSet::get_training_samples_indices(void)const " (?get_training_samples_indices@DataSet@opennn@@QEBA?AV?$Tensor@_J$00$0A@_J@Eigen@@XZ) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: __int64 __cdecl opennn::DataSet::get_target_numeric_variables_number(void)const " (?get_target_numeric_variables_number@DataSet@opennn@@QEBA_JXZ) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: class Eigen::Tensor<__int64,1,0,__int64> __cdecl opennn::DataSet::get_input_variables_indices(void)const " (?get_input_variables_indices@DataSet@opennn@@QEBA?AV?$Tensor@_J$00$0A@_J@Eigen@@XZ) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: class Eigen::Tensor<__int64,1,0,__int64> __cdecl opennn::DataSet::get_target_numeric_variables_indices(void)const " (?get_target_numeric_variables_indices@DataSet@opennn@@QEBA?AV?$Tensor@_J$00$0A@_J@Eigen@@XZ) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: class Eigen::Tensor<__int64,1,0,__int64> const & __cdecl opennn::DataSet::get_input_variables_dimensions(void)const " (?get_input_variables_dimensions@DataSet@opennn@@QEBAAEBV?$Tensor@_J$00$0A@_J@Eigen@@XZ) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: void __cdecl opennn::DataSet::set_data_source_path(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?set_data_source_path@DataSet@opennn@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: class Eigen::Tensor<struct opennn::Descriptives,1,0,__int64> __cdecl opennn::DataSet::scale_input_variables(void)" (?scale_input_variables@DataSet@opennn@@QEAA?AV?$Tensor@UDescriptives@opennn@@$00$0A@_J@Eigen@@XZ) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: __cdecl opennn::ImageDataSet::ImageDataSet(void)" (??0ImageDataSet@opennn@@QEAA@XZ) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: class Eigen::Tensor<unsigned char,1,0,__int64> __cdecl opennn::ImageDataSet::read_bmp_image(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?read_bmp_image@ImageDataSet@opennn@@QEAA?AV?$Tensor@E$00$0A@_J@Eigen@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: virtual __cdecl opennn::Layer::~Layer(void)" (??1Layer@opennn@@UEAA@XZ) referenced in function "public: virtual __cdecl opennn::FlattenLayer::~FlattenLayer(void)" (??1FlattenLayer@opennn@@UEAA@XZ)
main.obj : error LNK2019: unresolved external symbol "public: __cdecl opennn::PerceptronLayer::PerceptronLayer(__int64 const &,__int64 const &,enum opennn::PerceptronLayer::ActivationFunction const &)" (??0PerceptronLayer@opennn@@QEAA@AEB_J0AEBW4ActivationFunction@01@@Z) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: __cdecl opennn::FlattenLayer::FlattenLayer(class Eigen::Tensor<__int64,1,0,__int64> const &)" (??0FlattenLayer@opennn@@QEAA@AEBV?$Tensor@_J$00$0A@_J@Eigen@@@Z) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: class Eigen::Tensor<__int64,1,0,__int64> __cdecl opennn::FlattenLayer::get_outputs_dimensions(void)const " (?get_outputs_dimensions@FlattenLayer@opennn@@QEBA?AV?$Tensor@_J$00$0A@_J@Eigen@@XZ) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: __cdecl opennn::ConvolutionalLayer::ConvolutionalLayer(class Eigen::Tensor<__int64,1,0,__int64> const &,class Eigen::Tensor<__int64,1,0,__int64> const &)" (??0ConvolutionalLayer@opennn@@QEAA@AEBV?$Tensor@_J$00$0A@_J@Eigen@@0@Z) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: __cdecl opennn::ScalingLayer4D::ScalingLayer4D(class Eigen::Tensor<__int64,1,0,__int64> const &)" (??0ScalingLayer4D@opennn@@QEAA@AEBV?$Tensor@_J$00$0A@_J@Eigen@@@Z) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: __cdecl opennn::NeuralNetwork::NeuralNetwork(void)" (??0NeuralNetwork@opennn@@QEAA@XZ) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: virtual __cdecl opennn::NeuralNetwork::~NeuralNetwork(void)" (??1NeuralNetwork@opennn@@UEAA@XZ) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: void __cdecl opennn::NeuralNetwork::add_layer(class opennn::Layer *)" (?add_layer@NeuralNetwork@opennn@@QEAAXPEAVLayer@2@@Z) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: __int64 __cdecl opennn::NeuralNetwork::get_outputs_number(void)const " (?get_outputs_number@NeuralNetwork@opennn@@QEBA_JXZ) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: class Eigen::Tensor<float,2,0,__int64> __cdecl opennn::NeuralNetwork::calculate_outputs(class Eigen::Tensor<float,2,0,__int64> &)" (?calculate_outputs@NeuralNetwork@opennn@@QEAA?AV?$Tensor@M$01$0A@_J@Eigen@@AEAV34@@Z) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: virtual __cdecl opennn::LossIndex::~LossIndex(void)" (??1LossIndex@opennn@@UEAA@XZ) referenced in function "public: __cdecl opennn::TrainingStrategy::~TrainingStrategy(void)" (??1TrainingStrategy@opennn@@QEAA@XZ)
main.obj : error LNK2019: unresolved external symbol "public: void __cdecl opennn::LossIndex::set_regularization_method(enum opennn::LossIndex::RegularizationMethod const &)" (?set_regularization_method@LossIndex@opennn@@QEAAXAEBW4RegularizationMethod@12@@Z) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: virtual __cdecl opennn::OptimizationAlgorithm::~OptimizationAlgorithm(void)" (??1OptimizationAlgorithm@opennn@@UEAA@XZ) referenced in function "public: __cdecl opennn::TrainingStrategy::~TrainingStrategy(void)" (??1TrainingStrategy@opennn@@QEAA@XZ)
main.obj : error LNK2019: unresolved external symbol "public: virtual __cdecl opennn::LearningRateAlgorithm::~LearningRateAlgorithm(void)" (??1LearningRateAlgorithm@opennn@@UEAA@XZ) referenced in function "public: __cdecl opennn::TrainingStrategy::~TrainingStrategy(void)" (??1TrainingStrategy@opennn@@QEAA@XZ)
main.obj : error LNK2019: unresolved external symbol "public: void __cdecl opennn::AdaptiveMomentEstimation::set_batch_samples_number(__int64 const &)" (?set_batch_samples_number@AdaptiveMomentEstimation@opennn@@QEAAXAEB_J@Z) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: void __cdecl opennn::AdaptiveMomentEstimation::set_maximum_epochs_number(__int64 const &)" (?set_maximum_epochs_number@AdaptiveMomentEstimation@opennn@@QEAAXAEB_J@Z) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: __cdecl opennn::TrainingStrategy::TrainingStrategy(class opennn::NeuralNetwork *,class opennn::DataSet *)" (??0TrainingStrategy@opennn@@QEAA@PEAVNeuralNetwork@1@PEAVDataSet@1@@Z) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: class opennn::LossIndex * __cdecl opennn::TrainingStrategy::get_loss_index_pointer(void)" (?get_loss_index_pointer@TrainingStrategy@opennn@@QEAAPEAVLossIndex@2@XZ) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: class opennn::AdaptiveMomentEstimation * __cdecl opennn::TrainingStrategy::get_adaptive_moment_estimation_pointer(void)" (?get_adaptive_moment_estimation_pointer@TrainingStrategy@opennn@@QEAAPEAVAdaptiveMomentEstimation@2@XZ) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: void __cdecl opennn::TrainingStrategy::set_loss_method(enum opennn::TrainingStrategy::LossMethod const &)" (?set_loss_method@TrainingStrategy@opennn@@QEAAXAEBW4LossMethod@12@@Z) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: void __cdecl opennn::TrainingStrategy::set_optimization_method(enum opennn::TrainingStrategy::OptimizationMethod const &)" (?set_optimization_method@TrainingStrategy@opennn@@QEAAXAEBW4OptimizationMethod@12@@Z) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: struct opennn::TrainingResults __cdecl opennn::TrainingStrategy::perform_training(void)" (?perform_training@TrainingStrategy@opennn@@QEAA?AUTrainingResults@2@XZ) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: __cdecl opennn::TestingAnalysis::TestingAnalysis(class opennn::NeuralNetwork *,class opennn::DataSet *)" (??0TestingAnalysis@opennn@@QEAA@PEAVNeuralNetwork@1@PEAVDataSet@1@@Z) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: virtual __cdecl opennn::TestingAnalysis::~TestingAnalysis(void)" (??1TestingAnalysis@opennn@@UEAA@XZ) referenced in function main
main.obj : error LNK2019: unresolved external symbol "public: class Eigen::Tensor<__int64,2,0,__int64> __cdecl opennn::TestingAnalysis::calculate_confusion(void)const " (?calculate_confusion@TestingAnalysis@opennn@@QEBA?AV?$Tensor@_J$01$0A@_J@Eigen@@XZ) referenced in function main
bin\mnist.exe : fatal error LNK1120: 36 unresolved externals
